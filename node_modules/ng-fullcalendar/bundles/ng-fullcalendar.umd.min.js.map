{"version":3,"file":"ng-fullcalendar.umd.min.js","sources":["../../out-tsc/lib/src/calendar.component.ts","../../out-tsc/lib/src/module.ts","../../out-tsc/lib/src/models/buttonClickModel.ts","../../out-tsc/lib/src/models/updateEventModel.ts"],"sourcesContent":["import { Component, Input, Output, OnInit, AfterViewInit, HostListener, AfterContentChecked, AfterViewChecked, ElementRef, EventEmitter } from '@angular/core';\r\nimport $ from 'jquery';\r\nimport'fullcalendar';\r\nimport { Options } from 'fullcalendar';\r\nimport { ButtonClickModel } from './models/buttonClickModel';\r\nimport { UpdateEventModel } from './models/updateEventModel';\nexport class CalendarComponent implements OnInit, AfterViewInit, AfterContentChecked, AfterViewChecked {\r\n     options: Options;\r\n     eventDrop = new EventEmitter<any>();\r\n     eventResize = new EventEmitter<any>();\r\n     eventClick = new EventEmitter<any>();\r\n     clickButton = new EventEmitter<any>();\r\n     windowResize = new EventEmitter<any>();\r\n     viewRender = new EventEmitter<any>();\r\n     viewDestroy = new EventEmitter<any>();\r\n    text: string;\r\n    calendarInitiated: boolean;\n/**\n * @param {?} element\n */\nconstructor(private element: ElementRef) {\r\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\r\n    }\n/**\n * @return {?}\n */\nngAfterViewInit() {\r\n        setTimeout(() => {\r\n            this.updaterOptions();\r\n            $('ng-fullcalendar').fullCalendar(this.options);\r\n\r\n            // Click listeners\r\n            let /** @type {?} */ elem = document.getElementsByTagName('ng-fullcalendar');\r\n\r\n            $('[class ^=\"fc\"][class *=\"button\"]').click(el => {\r\n                let /** @type {?} */ classnames = el.currentTarget.className.split(' ');\r\n                classnames.forEach(name => {\r\n                    if (name.indexOf('button') == name.length - 6) {\r\n                        name = name.replace(/fc|button|-/g, '');\r\n                        if (name != '') {\r\n                            eventDispatch(name);\r\n                        }\r\n                    }\r\n                });\r\n            });\n/**\n * @param {?} buttonType\n * @return {?}\n */\nfunction eventDispatch(buttonType: string) {\r\n                let /** @type {?} */ data = $('ng-fullcalendar').fullCalendar('getDate');\r\n                let /** @type {?} */ currentDetail: ButtonClickModel = {\r\n                    buttonType: buttonType,\r\n                    data: data\r\n                };\r\n                var /** @type {?} */ widgetEvent = new CustomEvent('clickButton', {\r\n                    bubbles: true,\r\n                    detail: currentDetail\r\n                });\r\n                elem[0].dispatchEvent(widgetEvent);\r\n            }\r\n        }, 100);\r\n\r\n    }\n/**\n * @return {?}\n */\nngAfterContentChecked() {\r\n    }\n/**\n * @return {?}\n */\nngAfterViewChecked() {\r\n    }\n/**\n * @return {?}\n */\nupdaterOptions() {\r\n        let /** @type {?} */ elem = document.getElementsByTagName('ng-fullcalendar');\r\n        this.options.eventDrop = function (event, duration) {\r\n            let /** @type {?} */ detail: UpdateEventModel = { event: event, duration: duration };\r\n            var /** @type {?} */ widgetEvent = new CustomEvent('eventDrop', {\r\n                bubbles: true,\r\n                detail: detail\r\n            });\r\n            elem[0].dispatchEvent(widgetEvent);\r\n        };\r\n        this.options.eventResize = function (event, duration) {\r\n            let /** @type {?} */ detail: UpdateEventModel = { event: event, duration: duration };\r\n            var /** @type {?} */ widgetEvent = new CustomEvent('eventResize', {\r\n                bubbles: true,\r\n                detail: detail\r\n            });\r\n            elem[0].dispatchEvent(widgetEvent);\r\n        };\r\n        this.options.eventClick = function (event) {\r\n            let /** @type {?} */ detail: UpdateEventModel = { event: event, duration: null };\r\n            var /** @type {?} */ widgetEvent = new CustomEvent('eventClick', {\r\n                bubbles: true,\r\n                detail: detail\r\n            });\r\n            elem[0].dispatchEvent(widgetEvent);\r\n        };\r\n        this.options.windowResize = function (view) {\r\n            let /** @type {?} */ detail = { view: view };\r\n            var /** @type {?} */ widgetEvent = new CustomEvent('windowResize', {\r\n                bubbles: true,\r\n                detail: detail\r\n            });\r\n            elem[0].dispatchEvent(widgetEvent);\r\n        };\r\n        this.options.viewRender = function (view, element) {\r\n            let /** @type {?} */ detail = { view: view, element: element };\r\n            var /** @type {?} */ widgetEvent = new CustomEvent('viewRender', {\r\n                bubbles: true,\r\n                detail: detail\r\n            });\r\n            elem[0].dispatchEvent(widgetEvent);\r\n        };\r\n        this.options.viewDestroy = function (view, element) {\r\n            let /** @type {?} */ detail = { view: view, element: element };\r\n            var /** @type {?} */ widgetEvent = new CustomEvent('viewDestroy', {\r\n                bubbles: true,\r\n                detail: detail\r\n            });\r\n            elem[0].dispatchEvent(widgetEvent);\r\n        };\r\n    }\n/**\n * @param {...?} args\n * @return {?}\n */\nfullCalendar(...args: any[]) {\r\n        if (!args) {\r\n            return;\r\n        }\r\n        switch (args.length) {\r\n            case 0:\r\n                return;\r\n            case 1:\r\n                return $(this.element.nativeElement).fullCalendar(args[0]);\r\n            case 2:\r\n                return $(this.element.nativeElement).fullCalendar(args[0], args[1]);\r\n            case 3:\r\n                return $(this.element.nativeElement).fullCalendar(args[0], args[1], args[2]);\r\n        }\r\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nupdateEvent(event: any) {\r\n        return $(this.element.nativeElement).fullCalendar('updateEvent', event);\r\n    }\n/**\n * @param {?} idOrFilter\n * @return {?}\n */\nclientEvents(idOrFilter: any): any {\r\n        return $(this.element.nativeElement).fullCalendar('clientEvents', idOrFilter);\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n    selector: 'ng-fullcalendar',\r\n    template: '<div id=\"calendar\"></div>',\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'options': [{ type: Input },],\n'eventDrop': [{ type: Output },],\n'eventResize': [{ type: Output },],\n'eventClick': [{ type: Output },],\n'clickButton': [{ type: Output },],\n'windowResize': [{ type: Output },],\n'viewRender': [{ type: Output },],\n'viewDestroy': [{ type: Output },],\n};\n}\n\nfunction CalendarComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nCalendarComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCalendarComponent.ctorParameters;\n/** @type {?} */\nCalendarComponent.propDecorators;\n/** @type {?} */\nCalendarComponent.prototype.options;\n/** @type {?} */\nCalendarComponent.prototype.eventDrop;\n/** @type {?} */\nCalendarComponent.prototype.eventResize;\n/** @type {?} */\nCalendarComponent.prototype.eventClick;\n/** @type {?} */\nCalendarComponent.prototype.clickButton;\n/** @type {?} */\nCalendarComponent.prototype.windowResize;\n/** @type {?} */\nCalendarComponent.prototype.viewRender;\n/** @type {?} */\nCalendarComponent.prototype.viewDestroy;\n/** @type {?} */\nCalendarComponent.prototype.text;\n/** @type {?} */\nCalendarComponent.prototype.calendarInitiated;\n/** @type {?} */\nCalendarComponent.prototype.element;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\r\nimport { CalendarComponent } from './calendar.component';\nexport class FullCalendarModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n    declarations: [CalendarComponent],\r\n    exports: [CalendarComponent],\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FullCalendarModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFullCalendarModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFullCalendarModule.ctorParameters;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class ButtonClickModel {\r\n    buttonType: string;\r\n    data: any;\r\n}\n\nfunction ButtonClickModel_tsickle_Closure_declarations() {\n/** @type {?} */\nButtonClickModel.prototype.buttonType;\n/** @type {?} */\nButtonClickModel.prototype.data;\n}\n\r\n","\nexport class UpdateEventModel {\r\n    event: any;\r\n    duration: any;\r\n}\n\nfunction UpdateEventModel_tsickle_Closure_declarations() {\n/** @type {?} */\nUpdateEventModel.prototype.event;\n/** @type {?} */\nUpdateEventModel.prototype.duration;\n}\n\r\n"],"names":["element","this","EventEmitter","CalendarComponent","setTimeout","buttonType","currentDetail","data","$","fullCalendar","widgetEvent","CustomEvent","bubbles","detail","elem","dispatchEvent","_this","updaterOptions","options","document","getElementsByTagName","click","el","currentTarget","className","split","forEach","name","indexOf","length","replace","eventDispatch","eventDrop","event","duration","eventResize","eventClick","windowResize","view","viewRender","viewDestroy","_i","args","nativeElement","idOrFilter","type","Component","selector","template","ElementRef","Input","Output","clickButton","NgModule","declarations","exports","FullCalendarModule"],"mappings":"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"}